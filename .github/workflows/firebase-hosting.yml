# This file was auto-generated by the Firebase CLI
# https://github.com/firebase/firebase-tools
# memo: customized by @nothink

name: Deploy to Firebase
# on
on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, reopened, synchronize]
    branches:
      - main
# env
env:
  PROJECT_ID: "seioclub"
  FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}

# jobs
jobs:
  deploy:
    name: Deploy Next.js
    # Deploy only
    #   1. push to main
    #   2. pull request from original repos
    if: "${{ github.event_name == 'push' || github.event.pull_request.head.repo.full_name == github.repository }}"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: pnpm/action-setup@v2
      - uses: actions/setup-node@v3
        with:
          node-version: "18"
          cache: "pnpm"
      - run: pnpm install --frozen-lockfile
      # for using firebase-framework-tools
      - name: Enable experiment webframeworks
        run: pnpm exec firebase experiments:enable webframeworks
      # cache Next.js builds
      - name: Cache build caches of Next.js
        uses: actions/cache@v3
        with:
          path: |
            ~/.npm
            ${{ github.workspace }}/.next/cache
          # Generate a new cache whenever packages or source files change.
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/pnpm-lock.yaml') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
          # If source files changed but packages didn't, rebuild from a prior cache.
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/pnpm-lock.yaml') }}-
      - name: Build Next.js
        run: pnpm run build
      # --- when push to main branch ---

      # Deploy all
      - name: Deploy Cloud Functions
        run: cd functions && npm ci && npm run build
      - name: Deploy productions
        run: pnpm exec firebase deploy --only hosting

      # Deploy live channel to:
      #   1.1. push to main
      - name:  Deploy live channel
        uses: FirebaseExtended/action-hosting-deploy@v0
        if: "${{ github.event_name == 'push' }}"
        with:
          repoToken: "${{ secrets.GITHUB_TOKEN }}"
          firebaseServiceAccount: "${{ secrets.FIREBASE_SERVICE_ACCOUNT_SEIOCLUB }}"
          channelId: live
          projectId: "${{ env.PROJECT_ID }}"
      #   1.2. and install Cloud Functions
      - name: Deploy Cloud Functions
        if: "${{ github.event_name == 'push' }}"
        run: cd functions && npm ci && npm run build && npm run deploy
      # Deploy preview channel to:
      #   2. pull request from original repos
      - name: Deploy preview channel
        uses: FirebaseExtended/action-hosting-deploy@v0
        if: "${{ github.event_name == 'pull_request' }}"
        with:
          repoToken: "${{ secrets.GITHUB_TOKEN }}"
          firebaseServiceAccount: "${{ secrets.FIREBASE_SERVICE_ACCOUNT_SEIOCLUB }}"
          projectId: "${{ env.PROJECT_ID }}"
          expires: 12h
